// Auto generated by Testing Dashboard
// File        : scripts/Modify/Scale/Tests/ScaleTest09.js
// Timestamp   : 2017-06-30 11:36:33
// Description : 

include('scripts/Pro/Developer/TestingDashboard/TdbTest.js');

function ScaleTest09() {
    TdbTest.call(this, 'scripts/Modify/Scale/Tests/ScaleTest09.js');
}

ScaleTest09.prototype = new TdbTest();

ScaleTest09.prototype.test00 = function() {
    qDebug('running ScaleTest09.test00()...');
    this.setUp();
    this.importFile('scripts/Modify/Scale/Tests/data/entities.dxf');
    this.selectAll();
    TdbTest.clickOnWidget('MainWindow::CadQToolBar::CadToolBar::MainToolsPanel::ModifyToolsPanelButton');
    TdbTest.clickOnWidget('MainWindow::CadQToolBar::CadToolBar::ModifyToolsPanel::ScaleButton');
    this.setZoom(5.539728061000709, new RVector(31.5165, 14.9789, 0, true));
    var p = new RVector(-0.287543, 60.115018);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.LeftButton, 1, 0);
    this.dlgStart();
    this.dlgAppendCode('var map = new Map()');
    this.dlgAppendCode("map.put('DialogOpenedByTdb/groupBox', 'DeleteOriginal')");
    this.dlgAppendCode("map.put('DialogOpenedByTdb/NumberOfCopies', '2')");
    this.dlgAppendCode("map.put('DialogOpenedByTdb/FactorX', '1.0')");
    this.dlgAppendCode("map.put('DialogOpenedByTdb/KeepProportions', false)");
    this.dlgAppendCode("map.put('DialogOpenedByTdb/FactorY', '0.5')");
    this.dlgAppendCode("map.put('DialogOpenedByTdb/FactorByMouse', false)");
    this.dlgAppendCode("map.put('DialogOpenedByTdb/UseCurrentAttributes', false)");
    this.dlgAppendCode("WidgetFactory.restoreState(dialog, 'DialogOpenedByTdb', undefined, false, undefined, map)");
    this.dlgEnd();
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.LeftButton, 0, 0);
    this.verifyDrawing('ScaleTest09_000.dxf');
    this.tearDown();
    qDebug('finished ScaleTest09.test00()');
};

