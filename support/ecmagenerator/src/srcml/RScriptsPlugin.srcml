<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C++" dir="./scripts" filename="RScriptsPlugin.h"><cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>RSCRIPTSPLUGIN_H_</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>RSCRIPTSPLUGIN_H_</name></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QDebug&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QObject&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QScriptEngine&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QStringList&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"RPluginInterface.h"</cpp:file></cpp:include>

<class>class <name>RScriptsPlugin</name> <super>: <specifier>public</specifier> <name>QObject</name>, <specifier>public</specifier> <name>RPluginInterface</name></super>
<block>{<private type="default">
    <decl_stmt><decl><type><name>Q_OBJECT</name></type>
    <name>Q_INTERFACES</name><argument_list>(<argument><expr><name>RPluginInterface</name></expr></argument>)</argument_list>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>QT_VERSION</name> &gt;= 0x050000</expr></cpp:if>
    <name>Q_PLUGIN_METADATA</name><argument_list>(<argument><expr><name>IID</name> "org.qcad.scripts"</expr></argument>)</argument_list>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

public</decl></decl_stmt>:
    <constructor><name>RScriptsPlugin</name><parameter_list>()</parameter_list> <member_list>: <call><name>RPluginInterface</name><argument_list>()</argument_list></call> </member_list><block>{}</block></constructor>
    <destructor><specifier>virtual</specifier> <name>~RScriptsPlugin</name><parameter_list>()</parameter_list> <block>{}</block></destructor>
    <function_decl><type><name>virtual</name> <name>bool</name></type> <name>init</name><parameter_list>()</parameter_list>;</function_decl>
    <function><type><name>virtual</name> <name>void</name></type> <name>uninit</name><parameter_list>(<param><decl><type><name>bool</name></type></decl></param>)</parameter_list> <block>{}</block></function>
    <function><type><name>virtual</name> <name>void</name></type> <name>postInit</name><parameter_list>(<param><decl><type><name>InitStatus</name></type></decl></param>)</parameter_list> <block>{}</block></function>
    <function_decl><type><name>virtual</name> <name>void</name></type> <name>initScriptExtensions</name><parameter_list>(<param><decl><type><name>QScriptEngine</name>&amp;</type> <name>engine</name></decl></param>)</parameter_list>;</function_decl>
    <function_decl><type><name>virtual</name> <name>void</name></type> <name>initTranslations</name><parameter_list>()</parameter_list>;</function_decl>
    <function_decl><type><name>virtual</name> <name>RPluginInfo</name></type> <name>getPluginInfo</name><parameter_list>()</parameter_list>;</function_decl>
    <function><type><name>virtual</name> <name>bool</name></type> <name>checkLicense</name><parameter_list>()</parameter_list> <block>{ <return>return <expr><name>true</name></expr>;</return> }</block></function>
</private>}</block>;</class>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
